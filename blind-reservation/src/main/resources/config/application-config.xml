<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!-- 1. 패키지 자동 스캔 (DTO 제외한 클래스에 @Component 등 붙이면 자동 등록됨) -->
  <context:component-scan base-package="com.blindinstall" />

  <!-- 2. Oracle 데이터베이스 연결 -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
    <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/> <!-- XE 쓰면 :xe -->
    <property name="username" value="bl"/>
    <property name="password" value="bl"/>
  </bean>

  <!-- 3. JdbcTemplate 빈 등록 -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- 4. DAO 빈 등록 -->
  <bean id="productDAO" class="installblind.ProductDAOImpl">
    <property name="jdbcTemplate" ref="jdbcTemplate"/>
  </bean>

  <!-- 5. Service 빈 등록 -->
  <bean id="productService" class="installblind.ProductServiceImpl">
    <property name="productDAO" ref="productDAO"/>
  </bean>

  <!-- 6. AOP 설정: 추후 LoggingAspect 등 적용할 예정 -->
  <aop:aspectj-autoproxy/>
</beans>
